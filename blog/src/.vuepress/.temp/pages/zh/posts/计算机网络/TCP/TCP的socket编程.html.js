import comp from "C:/VS Code/my-docs/src/.vuepress/.temp/pages/zh/posts/计算机网络/TCP/TCP的socket编程.html.vue"
const data = JSON.parse("{\"path\":\"/zh/posts/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/TCP/TCP%E7%9A%84socket%E7%BC%96%E7%A8%8B.html\",\"title\":\"TCP的socket编程\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"TCP的socket编程\",\"tags\":[\"计算机基础\",\"计算机网络\",\"TCP\"],\"categories\":[\"计算机网络\"],\"description\":\"针对TCP应该如何socket编程？ 服务端创建一个监听socket和客户端初始化用来通信的 socket，得到文件描述符； 服务端调用 bind，将 socket 绑定在指定的 IP 地址和端口; 服务端调用 listen，进行监听； 服务端调用 accept，等待客户端连接； 客户端调用 connect，向服务端的地址和端口发起连接请求； 服务端 ...\",\"gitInclude\":[],\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://mister-hope.github.io/zh/posts/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/TCP/TCP%E7%9A%84socket%E7%BC%96%E7%A8%8B.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"博客主页\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"TCP的socket编程\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"针对TCP应该如何socket编程？ 服务端创建一个监听socket和客户端初始化用来通信的 socket，得到文件描述符； 服务端调用 bind，将 socket 绑定在指定的 IP 地址和端口; 服务端调用 listen，进行监听； 服务端调用 accept，等待客户端连接； 客户端调用 connect，向服务端的地址和端口发起连接请求； 服务端 ...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"计算机基础\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"计算机网络\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"TCP\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"TCP的socket编程\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[]}\"]]},\"headers\":[{\"level\":3,\"title\":\"针对TCP应该如何socket编程？\",\"slug\":\"针对tcp应该如何socket编程\",\"link\":\"#针对tcp应该如何socket编程\",\"children\":[]},{\"level\":3,\"title\":\"listen 时候参数 backlog 的意义？\",\"slug\":\"listen-时候参数-backlog-的意义\",\"link\":\"#listen-时候参数-backlog-的意义\",\"children\":[]},{\"level\":3,\"title\":\"accept 发生在三次握手的哪一步？\",\"slug\":\"accept-发生在三次握手的哪一步\",\"link\":\"#accept-发生在三次握手的哪一步\",\"children\":[]},{\"level\":3,\"title\":\"客户端调用 close 了，连接是断开的流程是什么？\",\"slug\":\"客户端调用-close-了-连接是断开的流程是什么\",\"link\":\"#客户端调用-close-了-连接是断开的流程是什么\",\"children\":[]},{\"level\":2,\"title\":\"服务端没有调用Listen,客户端请求建立连接会发生什么？\",\"slug\":\"服务端没有调用listen-客户端请求建立连接会发生什么\",\"link\":\"#服务端没有调用listen-客户端请求建立连接会发生什么\",\"children\":[]},{\"level\":2,\"title\":\"没有Accpet，能建立TCP连接吗？\",\"slug\":\"没有accpet-能建立tcp连接吗\",\"link\":\"#没有accpet-能建立tcp连接吗\",\"children\":[]},{\"level\":2,\"title\":\"TCP和UDP可以同时绑定相同的端口吗？\",\"slug\":\"tcp和udp可以同时绑定相同的端口吗\",\"link\":\"#tcp和udp可以同时绑定相同的端口吗\",\"children\":[]}],\"readingTime\":{\"minutes\":9.12,\"words\":2737},\"filePathRelative\":\"zh/posts/计算机网络/TCP/TCP的socket编程.md\",\"excerpt\":\"<h3>针对TCP应该如何socket编程？</h3>\\n<ul>\\n<li>服务端创建一个监听<code>socket</code>和客户端初始化用来通信的 <code>socket</code>，得到文件描述符；</li>\\n<li>服务端调用 <code>bind</code>，将 socket 绑定在指定的 IP 地址和端口;</li>\\n<li>服务端调用 <code>listen</code>，进行监听；</li>\\n<li>服务端调用 <code>accept</code>，等待客户端连接；</li>\\n<li>客户端调用 <code>connect</code>，向服务端的地址和端口发起连接请求；</li>\\n<li>服务端 <code>accept</code> 返回一个新创建的用于传输的 <code>socket</code>（已完成的） 的文件描述符；</li>\\n<li>客户端调用 <code>write</code> 写入数据；服务端调用 <code>read</code> 读取数据；</li>\\n<li>客户端断开连接时，会调用 <code>close</code>，那么服务端 <code>read</code> 读取数据的时候，就会读取到了 <code>EOF</code>，待处理完数据后，服务端调用 <code>close</code>，表示连接关闭。</li>\\n</ul>\",\"autoDesc\":true}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
